package ch11;

import java.util.ArrayList;

public class MyVector {

	// 1. Object배열 objArr을 인스턴스 변수로 갖는 MyVector 클래스를 선언
	Object[] objArr;
	
	// 2. MyVector클래스에 생성자 MyVector(int capacity)와 기본 생성자(capacity=16)를 추가하시오.

	int size; // 실제로 데이터가 들어가서 채워진 크기
	
	MyVector(int capacity){
		objArr = new Object[capacity]; //객체 초기화
	}
	
	MyVector(){
		this(5);
	}
	
	// 3. MyVector클래스에 객체배열에 저장된 객체의 개수를 저장하기 위한 인스턴스 변수 size를 추가하고,
	// 이 변수의 값을 반환하는 size()와 배열 objArr의 길이를 반환하는 capacity(), 그리고 객체배열이 비었는지 확인하는
	// boolean isEmpty()를 작성하시오.
	
	int size(){	return size; }
	int capacity(){	return objArr.length; }
	boolean isEmpty(){ return size==0; }
	
	// 4. 객체배열 objArr에 객체를 추가하는 메서드 void add(Object obj)를 작성하시오.
	// v.add(new Integer(4));
	
	void add(Object obj){
		// 공간있으면 저장, 공간없으면? 공간늘리고 저장
		
		if(size<objArr.length){
			objArr[size++] = obj;
		} else {
			// 1. 새로운 객체 배열 생성
//			System.out.println(objArr.length*2);
			Object[] tmp = new Object[objArr.length*2]; // 새로운 객체 배열 생성
			
//			System.out.println(tmp.length);
			// 2. 복사
			for(int i=0;i<size;i++){
				tmp[i] = objArr[i];
			}
			// 3. 참조변수 값(주소) 변경
			objArr = tmp;
			
			// 4. 객체저장하고 사이즈 증가
			objArr[size++] = obj;
			
		}
	}
	
	// 5. 객체배열 objArr에 저장된 객체를 반환하는 Object get(index)를 작성하시오.
	// v.get(0) 하면 0번째 있는 값을 반환하는 함수만들기 
	
	Object get(int index){
		return objArr[index];
	}
	
	// 6. toString()
	// 7. MyVector클래스의 객체배열 objArr에서 지정된 객체가 저장되어 있는 위치(index)를 반환하는 
	// int indexOf(Object obj)를 작성하시오.
	
	int indexOf(Object obj){
		for(int i=0;i<size;i++){
			if(objArr[i]==obj){
				return i;
			} else {
				System.out.println("오류"); 
			}
			
		}
		
	}
	
}
