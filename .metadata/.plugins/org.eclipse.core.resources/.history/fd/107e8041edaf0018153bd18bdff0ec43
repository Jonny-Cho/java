package ch6;

import static org.junit.Assert.*;

import org.junit.Test;

public class BingoTest {

	int bingoCheck(int[][] board){
		int bingoCnt = 0;
		int cnt1 = 0; // 가로 카운트
		int cnt2 = 0; // 세로 카운트
		int cnt3 = 0; // 대각선1 카운트
		int cnt4 = 0; // 대각선2 카운트
		
		for(int i=0;i<board.length;i++){
			cnt1 = 0; cnt2 =0;
			for(int j=0;j<board[i].length;j++){
				//가로
				if(board[i][j]==1){cnt1++;};
				
				if(board[j][i]==1){cnt2++;};
				
				if(i==j && board[i][j]==1){cnt3++;};
				
				if(i+j==4 && board[i][j]==1){cnt4++;};
			}
		}
		
		
/* 		// 가로
		for(int i=0;i<5;i++){
			cnt = 0;
			for(int j=0;j<5;j++){
				if(board[i][j]==1){
					cnt++;	
				}
				if(cnt==5){
					bingoCnt++;
				}
			}
			System.out.println();
		}
		
		// 세로
		for(int i=0;i<5;i++){
			cnt = 0;
			for(int j=0;j<5;j++){
				if(board[j][i]==1){
					cnt++;	
				}
				if(cnt==5){
					bingoCnt++;
				}
			}
			System.out.println();
		}
		
		
		// 대각선 1
		cnt = 0;
		for(int i=0;i<5;i++){
			for(int j=0;j<5;j++){
				if(i==j && board[i][j]==1){
					cnt++;
				}
			}
		}
		if(cnt==5){
			bingoCnt++;
		}
		
		// 대각선 2
		cnt = 0;
		for(int i=0;i<5;i++){
			for(int j=0;j<5;j++){
				if(i+j==4 && board[i][j]==1){
					cnt++;
				}
			}
		}
		
		if(cnt==5){
			bingoCnt++;
		}
		
		return bingoCnt;
	}*/
}

	@Test
	public void test() {
		int[][] board = {
				{1,1,1,1,1},
				{1,1,1,1,1},
				{1,1,1,1,1},
				{1,1,1,1,1},
				{1,1,1,1,1}
		};
		assertTrue(bingoCheck(board)==12);
	}
	
	@Test
	public void test2() {
		int[][] board = {
				{1,1,1,1,1},
				{1,0,0,0,0},
				{1,0,0,0,0},
				{1,0,0,0,0},
				{1,0,0,0,0}
		};
		assertTrue(bingoCheck(board)==2);
	}
	
	@Test
	public void test3() {
		int[][] board = {
				{1,1,1,1,1},
				{1,1,0,1,0},
				{1,0,1,1,1},
				{1,1,0,1,1},
				{1,0,0,0,1}
		};
		assertTrue(bingoCheck(board)==4);
	}
	
	@Test
	public void test4() {
		int[][] board = {
				{1,1,1,1,1},
				{1,1,0,1,0},
				{1,1,1,1,1},
				{1,1,0,1,1},
				{1,0,0,0,1}
		};
		assertTrue(bingoCheck(board)==5);
	}
	
	@Test
	public void test5() {
		int[][] board = {
				{1,1,1,1,1},
				{1,1,1,1,1},
				{1,1,1,1,1},
				{1,1,1,1,1},
				{1,0,1,0,1}
		};
		assertTrue(bingoCheck(board)==9);
	}
	
	

}
